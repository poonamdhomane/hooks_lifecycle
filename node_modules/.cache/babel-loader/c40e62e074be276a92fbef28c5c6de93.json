{"ast":null,"code":"var _jsxFileName = \"/Users/poonam/Development/Projects/healthservice/code/react/snehal_hospital/src/app/logger/tickerComponent.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState, useRef } from \"react\";\nimport stockPriceService from \"./stockPriceService\";\nimport \"./tickerComponent.scss\";\nimport logger from \"./logger\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TickerComponent() {\n  _s();\n\n  const [ticker, setTicker] = useState(\"AAPL\");\n  const currentPrice = stockPriceService.fetchPricesForTicker(ticker);\n  const componentRef = useRef();\n  logger.info(\"TickerComponent\", \"Begin Render\");\n  logger.info(\"TickerComponent\", `ticker= ${ticker}`, \"useState\"); // highlight when this component is (re)-rendered\n\n  setTimeout(() => {\n    componentRef.current.classList.add(\"render\");\n    setTimeout(() => {\n      componentRef.current.classList.remove(\"render\");\n    }, 1000);\n  }, 50);\n\n  const onChange = event => {\n    logger.info(\"TickerComponent\", `[user action] - new ticker selected (${event.target.value})`);\n    logger.info(\"TickerComponent\", `setTicker: ${event.target.value}`, \"useState\");\n    setTicker(event.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ticker\",\n    ref: componentRef,\n    children: [/*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: onChange,\n      value: ticker,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Select\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"NFLX\",\n        children: \"NFLX\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"FB\",\n        children: \"FB\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"MSFT\",\n        children: \"MSFT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"AAPL\",\n        children: \"AAPL\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ticker-name\",\n        children: ticker\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ticker-price\",\n        children: currentPrice\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TickerComponent, \"MG4Dbmnbeyyp/D0mCmNUgFdqVsQ=\");\n\n_c = TickerComponent;\nexport default TickerComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"TickerComponent\");","map":{"version":3,"sources":["/Users/poonam/Development/Projects/healthservice/code/react/snehal_hospital/src/app/logger/tickerComponent.jsx"],"names":["React","useState","useRef","stockPriceService","logger","TickerComponent","ticker","setTicker","currentPrice","fetchPricesForTicker","componentRef","info","setTimeout","current","classList","add","remove","onChange","event","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,MAAnB,QAAiC,OAAjC;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AACA,OAAO,wBAAP;AACA,OAAOC,MAAP,MAAmB,UAAnB;;;AAEA,SAASC,eAAT,GAA2B;AAAA;;AACzB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC,MAAD,CAApC;AACA,QAAMO,YAAY,GAAGL,iBAAiB,CAACM,oBAAlB,CAAuCH,MAAvC,CAArB;AACA,QAAMI,YAAY,GAAGR,MAAM,EAA3B;AAEAE,EAAAA,MAAM,CAACO,IAAP,CAAY,iBAAZ,EAA+B,cAA/B;AACAP,EAAAA,MAAM,CAACO,IAAP,CAAY,iBAAZ,EAAgC,WAAUL,MAAO,EAAjD,EAAoD,UAApD,EANyB,CAQzB;;AACAM,EAAAA,UAAU,CAAC,MAAM;AACfF,IAAAA,YAAY,CAACG,OAAb,CAAqBC,SAArB,CAA+BC,GAA/B,CAAmC,QAAnC;AACAH,IAAAA,UAAU,CAAC,MAAM;AACfF,MAAAA,YAAY,CAACG,OAAb,CAAqBC,SAArB,CAA+BE,MAA/B,CAAsC,QAAtC;AACD,KAFS,EAEP,IAFO,CAAV;AAGD,GALS,EAKP,EALO,CAAV;;AAOA,QAAMC,QAAQ,GAAIC,KAAD,IAAW;AAC1Bd,IAAAA,MAAM,CAACO,IAAP,CACE,iBADF,EAEG,wCAAuCO,KAAK,CAACC,MAAN,CAAaC,KAAM,GAF7D;AAIAhB,IAAAA,MAAM,CAACO,IAAP,CACE,iBADF,EAEG,cAAaO,KAAK,CAACC,MAAN,CAAaC,KAAM,EAFnC,EAGE,UAHF;AAKAb,IAAAA,SAAS,CAACW,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAT;AACD,GAXD;;AAaA,sBACE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAwB,IAAA,GAAG,EAAEV,YAA7B;AAAA,4BACE;AAAQ,MAAA,QAAQ,EAAEO,QAAlB;AAA4B,MAAA,KAAK,EAAEX,MAAnC;AAAA,8BACE;AAAQ,QAAA,KAAK,EAAC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAQ,QAAA,KAAK,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAQ,QAAA,KAAK,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE;AAAQ,QAAA,KAAK,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,eAKE;AAAQ,QAAA,KAAK,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAQE;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,kBAA8BA;AAA9B;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,kBAA+BE;AAA/B;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD;;GA5CQH,e;;KAAAA,e;AA8CT,eAAeA,eAAf","sourcesContent":["import React from \"react\";\nimport { useState, useRef } from \"react\";\nimport stockPriceService from \"./stockPriceService\";\nimport \"./tickerComponent.scss\";\nimport logger from \"./logger\";\n\nfunction TickerComponent() {\n  const [ticker, setTicker] = useState(\"AAPL\");\n  const currentPrice = stockPriceService.fetchPricesForTicker(ticker);\n  const componentRef = useRef();\n\n  logger.info(\"TickerComponent\", \"Begin Render\");\n  logger.info(\"TickerComponent\", `ticker= ${ticker}`, \"useState\");\n\n  // highlight when this component is (re)-rendered\n  setTimeout(() => {\n    componentRef.current.classList.add(\"render\");\n    setTimeout(() => {\n      componentRef.current.classList.remove(\"render\");\n    }, 1000);\n  }, 50);\n\n  const onChange = (event) => {\n    logger.info(\n      \"TickerComponent\",\n      `[user action] - new ticker selected (${event.target.value})`\n    );\n    logger.info(\n      \"TickerComponent\",\n      `setTicker: ${event.target.value}`,\n      \"useState\"\n    );\n    setTicker(event.target.value);\n  };\n\n  return (\n    <div className=\"ticker\" ref={componentRef}>\n      <select onChange={onChange} value={ticker}>\n        <option value=\"\">Select</option>\n        <option value=\"NFLX\">NFLX</option>\n        <option value=\"FB\">FB</option>\n        <option value=\"MSFT\">MSFT</option>\n        <option value=\"AAPL\">AAPL</option>\n      </select>\n      <div>\n        <div className=\"ticker-name\">{ticker}</div>\n        <div className=\"ticker-price\">{currentPrice}</div>\n      </div>\n    </div>\n  );\n}\n\nexport default TickerComponent;\n"]},"metadata":{},"sourceType":"module"}